<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" name="conrad_pmd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
	<description>DMP PMD rule set</description>
	<rule
		ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/AvoidMultipleUnaryOperators">
	</rule>
	<rule ref="rulesets/java/basic.xml/AvoidThreadGroup">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/AvoidUsingHardCodedIP">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/AvoidUsingOctalValues">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/BigIntegerInstantiation">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/BooleanInstantiation">
	</rule>
	<rule ref="rulesets/java/basic.xml/BrokenNullCheck">
	</rule>
	<rule ref="rulesets/java/basic.xml/CheckResultSet">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/DoubleCheckedLocking">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/EmptyCatchBlock">
	</rule>
	<rule ref="rulesets/java/basic.xml/EmptyFinallyBlock">
	</rule>
	<rule ref="rulesets/java/basic.xml/EmptyIfStmt">
	</rule>
	<rule ref="rulesets/java/basic.xml/EmptyInitializer">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/EmptyStatementNotInLoop">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/EmptyStaticInitializer">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/EmptySwitchStatements">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/EmptySynchronizedBlock">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/EmptyTryBlock">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/EmptyWhileStmt">
	</rule>
	<rule ref="rulesets/java/basic.xml/ForLoopShouldBeWhileLoop">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/JumbledIncrementer">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/MisplacedNullCheck">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/OverrideBothEqualsAndHashcode">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock">
	</rule>
	<rule ref="rulesets/java/basic.xml/UnconditionalIfStatement">
	</rule>
	<rule ref="rulesets/java/basic.xml/UnnecessaryConversionTemporary">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/UnnecessaryFinalModifier">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/UnnecessaryReturn">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/UnusedNullCheckInEquals">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/UselessOperationOnImmutable">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/basic.xml/UselessOverridingMethod">
	</rule>
	<rule ref="rulesets/java/braces.xml/ForLoopsMustUseBraces">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/braces.xml/IfElseStmtsMustUseBraces">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/braces.xml/IfStmtsMustUseBraces">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/clone.xml/CloneMethodMustImplementCloneable">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/clone.xml/ProperCloneImplementation">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/CyclomaticComplexity">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/ExcessiveClassLength">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/ExcessiveParameterList">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/ExcessivePublicCount">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/NcssConstructorCount">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/NcssMethodCount">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/NcssTypeCount">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/NPathComplexity">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/TooManyFields">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/codesize.xml/TooManyMethods">
		<priority>5</priority>
		<properties>
			<property name="maxmethods" value="20" />
		</properties>
	</rule>
	<rule ref="rulesets/java/controversial.xml/AssignmentInOperand">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/AvoidUsingNativeCode">
	</rule>
	<rule ref="rulesets/java/controversial.xml/AvoidUsingShortType">
	</rule>
	<rule ref="rulesets/java/controversial.xml/AvoidUsingVolatile">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/BooleanInversion">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/CallSuperInConstructor">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/DefaultPackage">
	</rule>
	<rule
		ref="rulesets/java/controversial.xml/DoNotCallGarbageCollectionExplicitly">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/DontImportSun">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/NullAssignment">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/SuspiciousOctalEscape">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/UnnecessaryConstructor">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/controversial.xml/UnnecessaryParentheses">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/unusedcode.xml/UnusedModifier">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/coupling.xml/CouplingBetweenObjects">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/coupling.xml/ExcessiveImports">
		<priority>5</priority>
		<properties>
			<property name="minimum" value="40" />
		</properties>
	</rule>
	<rule ref="rulesets/java/coupling.xml/LooseCoupling">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/AccessorClassGeneration">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic">
	</rule>
	<rule ref="rulesets/java/design.xml/AvoidConstantsInterface">
	</rule>
	<rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause">
		<priority>5</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/AvoidReassigningParameters">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/BadComparison">
		<priority>4</priority>
	</rule>
	<rule
		ref="rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/CompareObjectsWithEquals">
	</rule>
	<rule ref="rulesets/java/design.xml/ConfusingTernary">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/EqualsNull">
	</rule>
	<rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic">
	</rule>
	<rule ref="rulesets/java/design.xml/IdempotentOperations">
	</rule>
	<rule ref="rulesets/java/design.xml/ImmutableField">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/InstantiationToGetClass">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/MissingBreakInSwitch">
	</rule>
	<rule
		ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/NonStaticInitializer">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/NonThreadSafeSingleton">
	</rule>
	<rule ref="rulesets/java/design.xml/OptimizableToArrayCall">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/PreserveStackTrace">
	</rule>
	<rule ref="rulesets/java/design.xml/SimpleDateFormatNeedsLocale">
	</rule>
	<rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/SimplifyBooleanReturns">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/SimplifyConditional">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/SingularField">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/SwitchDensity">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/TooFewBranchesForASwitchStatement">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/UncommentedEmptyConstructor">
	</rule>
	<rule ref="rulesets/java/design.xml/UncommentedEmptyMethod">
	</rule>
	<rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter">
	</rule>
	<rule ref="rulesets/java/design.xml/UseCollectionIsEmpty">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/design.xml/UseLocaleWithCaseConversions">
	</rule>
	<rule ref="rulesets/java/design.xml/UseNotifyAllInsteadOfNotify">
	</rule>
	<rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/finalizers.xml/EmptyFinalizer">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/finalizers.xml/FinalizeOnlyCallsSuperFinalize">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/finalizers.xml/FinalizeShouldBeProtected">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/imports.xml/DontImportJavaLang">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/imports.xml/DuplicateImports">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/imports.xml/ImportFromSamePackage">
	</rule>
	<rule ref="rulesets/java/imports.xml/TooManyStaticImports">
		<priority>2</priority>
		<properties>
			<property name="maximumStaticImports" value="10" />
			<property name="xpath">
				<value><![CDATA[
                  
.[count(ImportDeclaration[@Static = 'true']) > $maximumStaticImports]
[not (//ClassOrInterfaceDeclaration[//ClassOrInterfaceType[typeof(@Image, 'junit.framework.TestCase','TestCase')] or //MarkerAnnotation/Name[typeof(@Image, 'org.junit.Test', 'Test')]])]
                  
              ]]></value>
			</property>
		</properties>
	</rule>
	<rule ref="rulesets/java/imports.xml/UnusedImports">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/junit.xml/JUnitAssertionsShouldIncludeMessage">
	</rule>
	<rule ref="rulesets/java/junit.xml/JUnitSpelling">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/junit.xml/JUnitStaticSuite">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/junit.xml/JUnitTestsShouldIncludeAssert">
	</rule>
	<rule ref="rulesets/java/junit.xml/SimplifyBooleanAssertion">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/junit.xml/TestClassWithoutTestCases">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/junit.xml/UnnecessaryBooleanAssertion">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/junit.xml/UseAssertNullInsteadOfAssertTrue">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/logging-jakarta-commons.xml/ProperLogger">
	</rule>
	<rule
		ref="rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/logging-java.xml/MoreThanOneLogger">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/logging-java.xml/SystemPrintln">
		<priority>4</priority>
	</rule>
	<rule ref="rulesets/java/migrating.xml/AvoidAssertAsIdentifier">
	</rule>
	<rule ref="rulesets/java/migrating.xml/AvoidEnumAsIdentifier">
	</rule>
	<rule ref="rulesets/java/migrating.xml/ByteInstantiation">
	</rule>
	<rule ref="rulesets/java/migrating.xml/IntegerInstantiation">
	</rule>
	<rule ref="rulesets/java/migrating.xml/LongInstantiation">
	</rule>
	<rule ref="rulesets/java/migrating.xml/ReplaceEnumerationWithIterator">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap">
	</rule>
	<rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList">
	</rule>
	<rule ref="rulesets/java/migrating.xml/ShortInstantiation">
	</rule>
	<rule ref="rulesets/java/naming.xml/AbstractNaming">
	</rule>
	<rule ref="rulesets/java/naming.xml/AvoidDollarSigns">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/BooleanGetMethodName">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/ClassNamingConventions">
	</rule>
	<rule ref="rulesets/java/naming.xml/LongVariable">
		<properties>
			<property name="xpath">
				<value><![CDATA[
                  
      //VariableDeclaratorId[string-length(@Image) > $minimum and not(upper-case(@Image)=@Image)]
                  
              ]]></value>
			</property>
			<property name="minimum" value="40" />
		</properties>
	</rule>
	<rule ref="rulesets/java/naming.xml/MethodNamingConventions">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/MisleadingVariableName">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/NoPackage">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/PackageCase">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/naming.xml/ShortMethodName">
	</rule>
	<rule ref="rulesets/java/naming.xml/ShortVariable">
		<priority>4</priority>
		<properties>
			<property name="xpath">
				<value><![CDATA[
                  
//VariableDeclaratorId[string-length(@Image) < 3]
 [not(ancestor::ForInit)]
 [not((ancestor::FormalParameter) and (ancestor::TryStatement))]
 [not(@Image='tx' or @Image='id' or @Image='pk') ]
                  
              ]]></value>
			</property>
		</properties>
	</rule>
	<rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName">
	</rule>
	<rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName">
	</rule>
	<rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/AddEmptyString">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/LocalVariableCouldBeFinal">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/MethodArgumentCouldBeFinal">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/SimplifyStartsWith">
		<priority>2</priority>
	</rule>
	<rule
		ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/UseArraysAsList">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/optimizations.xml/UseStringBufferForStringAppends">
	</rule>
	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE">
	</rule>
	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable">
	</rule>
	<rule ref="rulesets/java/strictexception.xml/AvoidRethrowingException">
	</rule>
	<rule
		ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException">
		<priority>3</priority>
	</rule>
	<rule
		ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/strictexception.xml/DoNotExtendJavaLangError">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/strictexception.xml/DoNotThrowExceptionInFinally">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl">
	</rule>
	<rule
		ref="rulesets/java/strictexception.xml/SignatureDeclareThrowsException">
	</rule>
	<rule ref="rulesets/java/strings.xml/AppendCharacterWithChar">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/AvoidStringBufferField">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/InefficientEmptyStringCheck">
	</rule>
	<rule ref="rulesets/java/strings.xml/InsufficientStringBufferDeclaration">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/StringInstantiation">
	</rule>
	<rule ref="rulesets/java/strings.xml/StringToString">
		<priority>2</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings">
	</rule>
	<rule ref="rulesets/java/strings.xml/UseIndexOfChar">
		<priority>1</priority>
	</rule>
	<rule ref="rulesets/java/strings.xml/UselessStringValueOf">
	</rule>
	<rule ref="rulesets/java/strings.xml/UseStringBufferLength">
	</rule>
	<rule ref="rulesets/java/sunsecure.xml/ArrayIsStoredDirectly">
	</rule>
	<rule ref="rulesets/java/sunsecure.xml/MethodReturnsInternalArray">
	</rule>
	<rule
		ref="rulesets/java/typeresolution.xml/CloneMethodMustImplementCloneable">
	</rule>
	<rule ref="rulesets/java/typeresolution.xml/LooseCoupling">
	</rule>
	<rule ref="rulesets/java/typeresolution.xml/UnusedImports">
		<priority>3</priority>
	</rule>
	<rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter">
	</rule>
	<rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable">
	</rule>
	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField">
	</rule>
	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod">
	</rule>
</ruleset>
