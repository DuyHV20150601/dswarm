SET foreign_key_checks = 0;

    drop table if exists ATTRIBUTE;

    drop table if exists ATTRIBUTE_PATH;

    drop table if exists ATTRIBUTE_PATHS_ATTRIBUTES;

    drop table if exists ATTRIBUTE_PATH_INSTANCE;

    drop table if exists CLASS;

    drop table if exists COMPONENT;

    drop table if exists CONFIGURATION;

    drop table if exists CONFIGURATIONS_RESOURCES;

    drop table if exists CONTENT_SCHEMA;

    drop table if exists CONTENT_SCHEMAS_KEY_ATTRIBUTE_PATHS;

    drop table if exists DATA_MODEL;

    drop table if exists DATA_SCHEMA;

    drop table if exists FILTER;

    drop table if exists FUNCTION;

    drop table if exists INPUT_COMPONENTS_OUTPUT_COMPONENTS;

    drop table if exists MAPPING;

    drop table if exists MAPPINGS_INPUT_ATTRIBUTE_PATHS;

    drop table if exists MAPPING_ATTRIBUTE_PATH_INSTANCE;

    drop table if exists PROJECT;

    drop table if exists PROJECTS_FUNCTIONS;

    drop table if exists PROJECTS_MAPPINGS;

    drop table if exists RESOURCE;

    drop table if exists SCHEMAS_SCHEMA_ATTRIBUTE_PATH_INSTANCES;

    drop table if exists SCHEMA_ATTRIBUTE_PATH_INSTANCE;

    drop table if exists TRANSFORMATION;

CREATE TABLE RESOURCE (
	UUID VARCHAR(160),
	ATTRIBUTES BLOB,
	DESCRIPTION VARCHAR(4000),
	NAME VARCHAR(255),
	TYPE VARCHAR(255),
	PRIMARY KEY (UUID)
);

CREATE TABLE CONFIGURATION (
	UUID VARCHAR(160),
	DESCRIPTION VARCHAR(4000),
	NAME VARCHAR(255),
	PARAMETERS BLOB,
	PRIMARY KEY (UUID)
);

CREATE TABLE DATA_MODEL (
	UUID VARCHAR(160),
	DEPRECATED TINYINT(1),
	DESCRIPTION VARCHAR(4000),
	NAME VARCHAR(255),
	CONFIGURATION VARCHAR(160),
	DATA_RESOURCE VARCHAR(160),
	DATA_SCHEMA VARCHAR(160),
	PRIMARY KEY (UUID)
);

CREATE TABLE ATTRIBUTE (
	UUID VARCHAR(160),
	NAME VARCHAR(255),
	URI VARCHAR(255),
	PRIMARY KEY (UUID)
);

CREATE TABLE ATTRIBUTE_PATH (
	UUID VARCHAR(160),
	ATTRIBUTE_PATH BLOB,
	PRIMARY KEY (UUID)
);

CREATE TABLE CLASS (
	UUID VARCHAR(160),
	NAME VARCHAR(255),
	URI VARCHAR(255),
	PRIMARY KEY (UUID)
);

CREATE TABLE DATA_SCHEMA (
	UUID VARCHAR(160),
	SCHEMA_ATTRIBUTE_PATH_INSTANCES LONGBLOB,
	NAME VARCHAR(255),
	CONTENT_SCHEMA VARCHAR(160),
	RECORD_CLASS VARCHAR(160),
	PRIMARY KEY (UUID)
);

CREATE TABLE COMPONENT (
	UUID VARCHAR(160),
	DESCRIPTION VARCHAR(4000),
	NAME VARCHAR(255),
	PARAMETER_MAPPINGS BLOB,
	FUNCTION VARCHAR(160),
	TRANSFORMATION VARCHAR(160),
	PRIMARY KEY (UUID)
);

CREATE TABLE FILTER (
	UUID VARCHAR(160),
	EXPRESSION BLOB,
	NAME VARCHAR(255),
	PRIMARY KEY (UUID)
);

CREATE TABLE FUNCTION (
	UUID VARCHAR(160),
	FUNCTION_TYPE VARCHAR(31),
	DESCRIPTION VARCHAR(4000),
	FUNCTION_DESCRIPTION BLOB,
	NAME VARCHAR(255),
	PARAMETERS BLOB,
	PRIMARY KEY (UUID)
);

CREATE TABLE MAPPING (
	UUID VARCHAR(160),
	NAME VARCHAR(255),
	OUTPUT_ATTRIBUTE_PATH VARCHAR(160),
	TRANSFORMATION VARCHAR(160),
	PRIMARY KEY (UUID)
);

CREATE TABLE PROJECT (
	UUID VARCHAR(160),
	DESCRIPTION VARCHAR(4000),
	NAME VARCHAR(255),
	SELECTED_RECORDS BLOB,
	INPUT_DATA_MODEL VARCHAR(160),
	OUTPUT_DATA_MODEL VARCHAR(160),
	SKIP_FILTER VARCHAR(160),
	PRIMARY KEY (UUID)
);

CREATE TABLE TRANSFORMATION (
	UUID VARCHAR(160),
	PRIMARY KEY (UUID)
);

CREATE TABLE ATTRIBUTE_PATH_INSTANCE (
	UUID VARCHAR(160),
	ATTRIBUTE_PATH_INSTANCE_TYPE VARCHAR(31),
	NAME VARCHAR(255),
	ATTRIBUTE_PATH VARCHAR(160),
	PRIMARY KEY (UUID)
);

CREATE TABLE MAPPING_ATTRIBUTE_PATH_INSTANCE (
	UUID VARCHAR(160),
	ORDINAL INTEGER,
	FILTER VARCHAR(160),
	PRIMARY KEY (UUID)
);

CREATE TABLE SCHEMA_ATTRIBUTE_PATH_INSTANCE (
	UUID VARCHAR(160),
	MULTIVALUE TINYINT(1) default 0,
	REQUIRED TINYINT(1) default 0,
	SUB_SCHEMA VARCHAR(160),
	PRIMARY KEY (UUID)
);

CREATE TABLE CONTENT_SCHEMA (
	UUID VARCHAR(160),
	KEY_ATTRIBUTE_PATHS BLOB,
	NAME VARCHAR(255),
	RECORD_IDENTIFIER_ATTRIBUTE_PATH VARCHAR(160),
	VALUE_ATTRIBUTE_PATH VARCHAR(160),
	PRIMARY KEY (UUID)
);

CREATE TABLE CONFIGURATIONS_RESOURCES (
	RESOURCE_UUID VARCHAR(160),
	CONFIGURATION_UUID VARCHAR(160),
	PRIMARY KEY (RESOURCE_UUID,CONFIGURATION_UUID)
);

CREATE TABLE ATTRIBUTE_PATHS_ATTRIBUTES (
	ATTRIBUTE_PATH_UUID VARCHAR(160),
	ATTRIBUTE_UUID VARCHAR(160),
	PRIMARY KEY (ATTRIBUTE_PATH_UUID,ATTRIBUTE_UUID)
);

CREATE TABLE SCHEMAS_SCHEMA_ATTRIBUTE_PATH_INSTANCES (
	SCHEMA_UUID VARCHAR(160),
	SCHEMA_ATTRIBUTE_PATH_INSTANCE_UUID VARCHAR(160),
	PRIMARY KEY (SCHEMA_UUID,SCHEMA_ATTRIBUTE_PATH_INSTANCE_UUID)
);

CREATE TABLE INPUT_COMPONENTS_OUTPUT_COMPONENTS (
	OUTPUT_COMPONENT_UUID VARCHAR(160),
	INPUT_COMPONENT_UUID VARCHAR(160),
	PRIMARY KEY (OUTPUT_COMPONENT_UUID,INPUT_COMPONENT_UUID)
);

CREATE TABLE MAPPINGS_INPUT_ATTRIBUTE_PATHS (
	MAPPING_UUID VARCHAR(160),
	INPUT_ATTRIBUTE_PATH_UUID VARCHAR(160),
	PRIMARY KEY (MAPPING_UUID,INPUT_ATTRIBUTE_PATH_UUID)
);

CREATE TABLE PROJECTS_FUNCTIONS (
	PROJECT_UUID VARCHAR(160),
	FUNCTION_UUID VARCHAR(160),
	PRIMARY KEY (PROJECT_UUID,FUNCTION_UUID)
);

CREATE TABLE PROJECTS_MAPPINGS (
	PROJECT_UUID VARCHAR(160),
	MAPPING_UUID VARCHAR(160),
	PRIMARY KEY (PROJECT_UUID,MAPPING_UUID)
);

CREATE TABLE CONTENT_SCHEMAS_KEY_ATTRIBUTE_PATHS (
	CONTENT_SCHEMA_UUID VARCHAR(160),
	ATTRIBUTE_PATH_UUID VARCHAR(160),
	PRIMARY KEY (CONTENT_SCHEMA_UUID,ATTRIBUTE_PATH_UUID)
);

ALTER TABLE DATA_MODEL
	ADD CONSTRAINT FK_DATA_MODEL_DATA_SCHEMA FOREIGN KEY (DATA_SCHEMA)
	REFERENCES DATA_SCHEMA (UUID);

ALTER TABLE DATA_MODEL
	ADD CONSTRAINT FK_DATA_MODEL_CONFIGURATION FOREIGN KEY (CONFIGURATION)
	REFERENCES CONFIGURATION (UUID);

ALTER TABLE DATA_MODEL
	ADD CONSTRAINT FK_DATA_MODEL_DATA_RESOURCE FOREIGN KEY (DATA_RESOURCE)
	REFERENCES RESOURCE (UUID);

ALTER TABLE DATA_SCHEMA
	ADD CONSTRAINT FK_DATA_SCHEMA_CONTENT_SCHEMA FOREIGN KEY (CONTENT_SCHEMA)
	REFERENCES CONTENT_SCHEMA (UUID);

ALTER TABLE DATA_SCHEMA
	ADD CONSTRAINT FK_DATA_SCHEMA_RECORD_CLASS FOREIGN KEY (RECORD_CLASS)
	REFERENCES CLASS (UUID);

ALTER TABLE COMPONENT
	ADD CONSTRAINT FK_COMPONENT_TRANSFORMATION FOREIGN KEY (TRANSFORMATION)
	REFERENCES FUNCTION (UUID);

ALTER TABLE COMPONENT
	ADD CONSTRAINT FK_COMPONENT_FUNCTION FOREIGN KEY (FUNCTION)
	REFERENCES FUNCTION (UUID);

ALTER TABLE MAPPING
	ADD CONSTRAINT FK_MAPPING_OUTPUT_ATTRIBUTE_PATH FOREIGN KEY (OUTPUT_ATTRIBUTE_PATH)
	REFERENCES ATTRIBUTE_PATH_INSTANCE (UUID);

ALTER TABLE MAPPING
	ADD CONSTRAINT FK_MAPPING_TRANSFORMATION FOREIGN KEY (TRANSFORMATION)
	REFERENCES COMPONENT (UUID);

ALTER TABLE PROJECT
	ADD CONSTRAINT FK_PROJECT_OUTPUT_DATA_MODEL FOREIGN KEY (OUTPUT_DATA_MODEL)
	REFERENCES DATA_MODEL (UUID);

ALTER TABLE PROJECT
	ADD CONSTRAINT FK_PROJECT_INPUT_DATA_MODEL FOREIGN KEY (INPUT_DATA_MODEL)
	REFERENCES DATA_MODEL (UUID);

ALTER TABLE PROJECT
	ADD CONSTRAINT FK_PROJECT_SKIP_FILTER FOREIGN KEY (SKIP_FILTER)
	REFERENCES FILTER (UUID);

ALTER TABLE TRANSFORMATION
	ADD CONSTRAINT FK_TRANSFORMATION_UUID FOREIGN KEY (UUID)
	REFERENCES FUNCTION (UUID);

ALTER TABLE ATTRIBUTE_PATH_INSTANCE
	ADD CONSTRAINT FK_ATTRIBUTE_PATH_INSTANCE_ATTRIBUTE_PATH FOREIGN KEY (ATTRIBUTE_PATH)
	REFERENCES ATTRIBUTE_PATH (UUID);

ALTER TABLE MAPPING_ATTRIBUTE_PATH_INSTANCE
	ADD CONSTRAINT FK_MAPPING_ATTRIBUTE_PATH_INSTANCE_UUID FOREIGN KEY (UUID)
	REFERENCES ATTRIBUTE_PATH_INSTANCE (UUID);

ALTER TABLE MAPPING_ATTRIBUTE_PATH_INSTANCE
	ADD CONSTRAINT FK_MAPPING_ATTRIBUTE_PATH_INSTANCE_FILTER FOREIGN KEY (FILTER)
	REFERENCES FILTER (UUID);

ALTER TABLE SCHEMA_ATTRIBUTE_PATH_INSTANCE
	ADD CONSTRAINT FK_SCHEMA_ATTRIBUTE_PATH_INSTANCE_UUID FOREIGN KEY (UUID)
	REFERENCES ATTRIBUTE_PATH_INSTANCE (UUID);

ALTER TABLE SCHEMA_ATTRIBUTE_PATH_INSTANCE
	ADD CONSTRAINT FK_SCHEMA_ATTRIBUTE_PATH_INSTANCE_SUB_SCHEMA FOREIGN KEY (SUB_SCHEMA)
	REFERENCES DATA_SCHEMA (UUID);

ALTER TABLE CONTENT_SCHEMA
	ADD CONSTRAINT FK_CONTENT_SCHEMA_RECORD_IDENTIFIER_ATTRIBUTE_PATH FOREIGN KEY (RECORD_IDENTIFIER_ATTRIBUTE_PATH)
	REFERENCES ATTRIBUTE_PATH (UUID);

ALTER TABLE CONTENT_SCHEMA
	ADD CONSTRAINT FK_CONTENT_SCHEMA_VALUE_ATTRIBUTE_PATH FOREIGN KEY (VALUE_ATTRIBUTE_PATH)
	REFERENCES ATTRIBUTE_PATH (UUID);

ALTER TABLE CONFIGURATIONS_RESOURCES
	ADD CONSTRAINT FK_CONFIGURATIONS_RESOURCES_CONFIGURATION_UUID FOREIGN KEY (CONFIGURATION_UUID)
	REFERENCES CONFIGURATION (UUID);

ALTER TABLE CONFIGURATIONS_RESOURCES
	ADD CONSTRAINT FK_CONFIGURATIONS_RESOURCES_RESOURCE_UUID FOREIGN KEY (RESOURCE_UUID)
	REFERENCES RESOURCE (UUID);

ALTER TABLE ATTRIBUTE_PATHS_ATTRIBUTES
	ADD CONSTRAINT FK_ATTRIBUTE_PATHS_ATTRIBUTES_ATTRIBUTE_PATH_UUID FOREIGN KEY (ATTRIBUTE_PATH_UUID)
	REFERENCES ATTRIBUTE_PATH (UUID);

ALTER TABLE ATTRIBUTE_PATHS_ATTRIBUTES
	ADD CONSTRAINT FK_ATTRIBUTE_PATHS_ATTRIBUTES_ATTRIBUTE_UUID FOREIGN KEY (ATTRIBUTE_UUID)
	REFERENCES ATTRIBUTE (UUID);

ALTER TABLE SCHEMAS_SCHEMA_ATTRIBUTE_PATH_INSTANCES
	ADD CONSTRAINT SCHMSSCHMTTRBTPATHINSTANCESSCHMTTRBTPTHNSTANCEUUID FOREIGN KEY (SCHEMA_ATTRIBUTE_PATH_INSTANCE_UUID)
	REFERENCES ATTRIBUTE_PATH_INSTANCE (UUID);

ALTER TABLE SCHEMAS_SCHEMA_ATTRIBUTE_PATH_INSTANCES
	ADD CONSTRAINT SCHEMAS_SCHEMA_ATTRIBUTE_PATH_INSTANCESSCHEMA_UUID FOREIGN KEY (SCHEMA_UUID)
	REFERENCES DATA_SCHEMA (UUID);

ALTER TABLE INPUT_COMPONENTS_OUTPUT_COMPONENTS
	ADD CONSTRAINT INPUTCOMPONENTSOUTPUTCOMPONENTSOUTPUTCOMPONENTUUID FOREIGN KEY (OUTPUT_COMPONENT_UUID)
	REFERENCES COMPONENT (UUID);

ALTER TABLE INPUT_COMPONENTS_OUTPUT_COMPONENTS
	ADD CONSTRAINT INPUTCOMPONENTSOUTPUTCOMPONENTSINPUTCOMPONENT_UUID FOREIGN KEY (INPUT_COMPONENT_UUID)
	REFERENCES COMPONENT (UUID);

ALTER TABLE MAPPINGS_INPUT_ATTRIBUTE_PATHS
	ADD CONSTRAINT FK_MAPPINGS_INPUT_ATTRIBUTE_PATHS_MAPPING_UUID FOREIGN KEY (MAPPING_UUID)
	REFERENCES MAPPING (UUID);

ALTER TABLE MAPPINGS_INPUT_ATTRIBUTE_PATHS
	ADD CONSTRAINT MAPPINGSINPUTATTRIBUTEPATHSINPUTATTRIBUTEPATH_UUID FOREIGN KEY (INPUT_ATTRIBUTE_PATH_UUID)
	REFERENCES ATTRIBUTE_PATH_INSTANCE (UUID);

ALTER TABLE PROJECTS_FUNCTIONS
	ADD CONSTRAINT FK_PROJECTS_FUNCTIONS_PROJECT_UUID FOREIGN KEY (PROJECT_UUID)
	REFERENCES PROJECT (UUID);

ALTER TABLE PROJECTS_FUNCTIONS
	ADD CONSTRAINT FK_PROJECTS_FUNCTIONS_FUNCTION_UUID FOREIGN KEY (FUNCTION_UUID)
	REFERENCES FUNCTION (UUID);

ALTER TABLE PROJECTS_MAPPINGS
	ADD CONSTRAINT FK_PROJECTS_MAPPINGS_PROJECT_UUID FOREIGN KEY (PROJECT_UUID)
	REFERENCES PROJECT (UUID);

ALTER TABLE PROJECTS_MAPPINGS
	ADD CONSTRAINT FK_PROJECTS_MAPPINGS_MAPPING_UUID FOREIGN KEY (MAPPING_UUID)
	REFERENCES MAPPING (UUID);

ALTER TABLE CONTENT_SCHEMAS_KEY_ATTRIBUTE_PATHS
	ADD CONSTRAINT CONTENTSCHEMASKEYATTRIBUTEPATHSATTRIBUTE_PATH_UUID FOREIGN KEY (ATTRIBUTE_PATH_UUID)
	REFERENCES ATTRIBUTE_PATH (UUID);

ALTER TABLE CONTENT_SCHEMAS_KEY_ATTRIBUTE_PATHS
	ADD CONSTRAINT CONTENTSCHEMASKEYATTRIBUTEPATHSCONTENT_SCHEMA_UUID FOREIGN KEY (CONTENT_SCHEMA_UUID)
	REFERENCES CONTENT_SCHEMA (UUID);

SET foreign_key_checks = 1;